{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Blake\\\\react\\\\unite\\\\src\\\\views\\\\Roster.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"./roster.css\";\nimport PokemonBasic from \"../pokemon/PokemonBasic.jsx\";\nimport { usePokemonProvider } from \"../context/PokemonContext\";\nimport SelectPokemon from \"../components/pokemonSort/SelectPokemon\";\nimport { useSelectProvider } from \"../context/SelectContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Roster() {\n  _s();\n\n  const {\n    roster\n  } = usePokemonProvider();\n  const {\n    roles,\n    styles,\n    difficulty,\n    type\n  } = useSelectProvider();\n\n  const filters = data => {\n    let dataCopy = data; //Role Start\n\n    if (roles !== \"all\") {\n      // (1 Roll) && (2 Style)\n      if (styles !== \"all\") {\n        // (1 Role) && (2 style) && (3 Difficulty)\n        if (difficulty !== \"all\") {\n          // (1 Role) && (2 style) && (3 Difficulty) && ( 4 type )\n          if (type !== \"all\") {\n            dataCopy = dataCopy.role === roles && dataCopy.style === styles && dataCopy.difficulty === difficulty && dataCopy.type === type;\n          } else {\n            dataCopy = dataCopy.role === roles && dataCopy.style === styles && dataCopy.difficulty === difficulty;\n          }\n        } else if (type !== \"all\") {\n          dataCopy = dataCopy.role === roles && dataCopy.style === styles && dataCopy.type === type;\n        } else {\n          dataCopy = dataCopy.role === roles && dataCopy.style === styles;\n        }\n      } else if (difficulty !== \"all\") {\n        if (styles !== \"all\") {\n          if (type !== \"all\") {\n            dataCopy = dataCopy.role === roles && dataCopy.style === styles && dataCopy.difficulty === difficulty && dataCopy.type === type;\n          } else {\n            dataCopy = dataCopy.role === roles && dataCopy.style === styles && dataCopy.difficulty === difficulty;\n          }\n        } else if (type !== \"all\") {\n          if (styles !== \"all\") {\n            dataCopy = dataCopy.role === roles && dataCopy.style === styles && dataCopy.type === type && dataCopy.difficulty === difficulty;\n          } else {\n            dataCopy = dataCopy.role === roles && dataCopy.difficulty === difficulty && dataCopy.type === type;\n          }\n        } else {\n          dataCopy = dataCopy.role === roles && dataCopy.difficulty === difficulty;\n        }\n      } else if (type !== \"all\") {\n        dataCopy = dataCopy.role === roles && dataCopy.type === type;\n      } else {\n        dataCopy = dataCopy.role === roles;\n      }\n    }\n\n    return dataCopy;\n  };\n\n  const filterData = data => {\n    let dataCopy = data; //start (1))\n\n    if (roles !== \"all\") {\n      if (styles !== \"all\") {\n        if (difficulty !== \"all\") {\n          if (type !== \"all\") {\n            dataCopy = dataCopy.role === roles && dataCopy.style === styles && dataCopy.difficulty === difficulty && dataCopy.type === type;\n          } else {\n            dataCopy = dataCopy.role === roles && dataCopy.style === styles && dataCopy.difficulty === difficulty;\n          }\n        } else if (type !== \"all\") {\n          dataCopy = dataCopy.role === roles && dataCopy.style === styles && dataCopy.type === type;\n        } else {\n          dataCopy = dataCopy.role === roles && dataCopy.style === styles;\n        }\n      } else if (difficulty !== \"all\") {} else if (type !== \"all\") {} else {\n        dataCopy = dataCopy.role === roles;\n      } // start (2)\n\n    } else if (styles !== \"all\") {\n      if (difficulty !== \"all\") {\n        if (type !== \"all\") {\n          dataCopy = dataCopy.style === styles && dataCopy.difficulty === difficulty && dataCopy.type === type;\n        } else {\n          dataCopy = dataCopy.style === styles && dataCopy.difficulty === difficulty;\n        }\n      } else if (type !== \"all\") {\n        dataCopy = dataCopy.style === styles && dataCopy.type === type;\n      } else {\n        dataCopy = dataCopy.style === styles;\n      } //start (3)\n\n    } else if (difficulty !== \"all\") {\n      if (type !== \"all\") {\n        dataCopy = dataCopy.difficulty === difficulty && dataCopy.type === type;\n      } else {\n        dataCopy = dataCopy.difficulty === difficulty;\n      } //Start (4)\n\n    } else if (type !== \"all\") {\n      dataCopy = dataCopy.type === type;\n    }\n\n    return dataCopy;\n  };\n\n  if (!roster) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"roster\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Roster\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Roles:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), \" \", roles]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Styles:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), \" \", styles]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Difficulty:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), \" \", difficulty]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), \" \", type]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SelectPokemon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-basic-grid\",\n      children: roster.filter(p => filterData(p)).map(p => /*#__PURE__*/_jsxDEV(PokemonBasic, {\n        p: p\n      }, p.pokemonId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Roster, \"zpR3aSSs3DEEeO7Em1kWkG8jVDo=\", false, function () {\n  return [usePokemonProvider, useSelectProvider];\n});\n\n_c = Roster;\n\nvar _c;\n\n$RefreshReg$(_c, \"Roster\");","map":{"version":3,"sources":["C:/Users/Blake/react/unite/src/views/Roster.js"],"names":["useState","useEffect","PokemonBasic","usePokemonProvider","SelectPokemon","useSelectProvider","Roster","roster","roles","styles","difficulty","type","filters","data","dataCopy","role","style","filterData","filter","p","map","pokemonId"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport \"./roster.css\";\r\nimport PokemonBasic from \"../pokemon/PokemonBasic.jsx\";\r\nimport { usePokemonProvider } from \"../context/PokemonContext\";\r\nimport SelectPokemon from \"../components/pokemonSort/SelectPokemon\";\r\nimport { useSelectProvider } from \"../context/SelectContext\";\r\n\r\nexport default function Roster() {\r\n  const { roster } = usePokemonProvider();\r\n  const { roles, styles, difficulty, type } = useSelectProvider();\r\n\r\n  const filters = data => {\r\n    let dataCopy = data;\r\n    //Role Start\r\n    if (roles !== \"all\") {\r\n      // (1 Roll) && (2 Style)\r\n      if (styles !== \"all\") {\r\n        // (1 Role) && (2 style) && (3 Difficulty)\r\n        if (difficulty !== \"all\") {\r\n          // (1 Role) && (2 style) && (3 Difficulty) && ( 4 type )\r\n          if (type !== \"all\") {\r\n            dataCopy =\r\n              dataCopy.role === roles &&\r\n              dataCopy.style === styles &&\r\n              dataCopy.difficulty === difficulty &&\r\n              dataCopy.type === type;\r\n          } else {\r\n            dataCopy =\r\n              dataCopy.role === roles &&\r\n              dataCopy.style === styles &&\r\n              dataCopy.difficulty === difficulty;\r\n          }\r\n        } else if (type !== \"all\") {\r\n          dataCopy =\r\n            dataCopy.role === roles &&\r\n            dataCopy.style === styles &&\r\n            dataCopy.type === type;\r\n        } else {\r\n          dataCopy = dataCopy.role === roles && dataCopy.style === styles;\r\n        }\r\n      } else if (difficulty !== \"all\") {\r\n        if (styles !== \"all\") {\r\n          if (type !== \"all\") {\r\n            dataCopy =\r\n              dataCopy.role === roles &&\r\n              dataCopy.style === styles &&\r\n              dataCopy.difficulty === difficulty &&\r\n              dataCopy.type === type;\r\n          } else {\r\n            dataCopy =\r\n              dataCopy.role === roles &&\r\n              dataCopy.style === styles &&\r\n              dataCopy.difficulty === difficulty;\r\n          }\r\n        } else if (type !== \"all\") {\r\n          if (styles !== \"all\") {\r\n            dataCopy =\r\n              dataCopy.role === roles &&\r\n              dataCopy.style === styles &&\r\n              dataCopy.type === type &&\r\n              dataCopy.difficulty === difficulty;\r\n          } else {\r\n            dataCopy =\r\n              dataCopy.role === roles &&\r\n              dataCopy.difficulty === difficulty &&\r\n              dataCopy.type === type;\r\n          }\r\n        } else {\r\n          dataCopy =\r\n            dataCopy.role === roles && dataCopy.difficulty === difficulty;\r\n        }\r\n      } else if (type !== \"all\") {\r\n        dataCopy = dataCopy.role === roles && dataCopy.type === type;\r\n      } else {\r\n        dataCopy = dataCopy.role === roles;\r\n      }\r\n    }\r\n\r\n    return dataCopy;\r\n  };\r\n\r\n  const filterData = data => {\r\n    let dataCopy = data;\r\n    //start (1))\r\n    if (roles !== \"all\") {\r\n      if (styles !== \"all\") {\r\n        if (difficulty !== \"all\") {\r\n          if (type !== \"all\") {\r\n            dataCopy =\r\n              dataCopy.role === roles &&\r\n              dataCopy.style === styles &&\r\n              dataCopy.difficulty === difficulty &&\r\n              dataCopy.type === type;\r\n          } else {\r\n            dataCopy =\r\n              dataCopy.role === roles &&\r\n              dataCopy.style === styles &&\r\n              dataCopy.difficulty === difficulty;\r\n          }\r\n        } else if (type !== \"all\") {\r\n          dataCopy =\r\n            dataCopy.role === roles &&\r\n            dataCopy.style === styles &&\r\n            dataCopy.type === type;\r\n        } else {\r\n          dataCopy = dataCopy.role === roles && dataCopy.style === styles;\r\n        }\r\n      } else if (difficulty !== \"all\") {\r\n      } else if (type !== \"all\") {\r\n      } else {\r\n        dataCopy = dataCopy.role === roles;\r\n      }\r\n\r\n      // start (2)\r\n    } else if (styles !== \"all\") {\r\n      if (difficulty !== \"all\") {\r\n        if (type !== \"all\") {\r\n          dataCopy =\r\n            dataCopy.style === styles &&\r\n            dataCopy.difficulty === difficulty &&\r\n            dataCopy.type === type;\r\n        } else {\r\n          dataCopy =\r\n            dataCopy.style === styles && dataCopy.difficulty === difficulty;\r\n        }\r\n      } else if (type !== \"all\") {\r\n        dataCopy = dataCopy.style === styles && dataCopy.type === type;\r\n      } else {\r\n        dataCopy = dataCopy.style === styles;\r\n      }\r\n\r\n      //start (3)\r\n    } else if (difficulty !== \"all\") {\r\n      if (type !== \"all\") {\r\n        dataCopy = dataCopy.difficulty === difficulty && dataCopy.type === type;\r\n      } else {\r\n        dataCopy = dataCopy.difficulty === difficulty;\r\n      }\r\n      //Start (4)\r\n    } else if (type !== \"all\") {\r\n      dataCopy = dataCopy.type === type;\r\n    }\r\n    return dataCopy;\r\n  };\r\n\r\n  if (!roster) return <p>Loading</p>;\r\n\r\n  return (\r\n    <div className=\"roster\">\r\n      <h1>Roster</h1>\r\n      <p>\r\n        <span>Roles:</span> {roles}\r\n      </p>\r\n      <p>\r\n        <span>Styles:</span> {styles}\r\n      </p>\r\n      <p>\r\n        <span>Difficulty:</span> {difficulty}\r\n      </p>\r\n      <p>\r\n        <span>Type:</span> {type}\r\n      </p>\r\n\r\n      <div>\r\n        <SelectPokemon />\r\n      </div>\r\n      <div className=\"p-basic-grid\">\r\n        {roster\r\n          .filter(p => filterData(p))\r\n          .map(p => (\r\n            <PokemonBasic key={p.pokemonId} p={p} />\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}