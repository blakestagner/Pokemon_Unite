{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Blake\\\\react\\\\unite\\\\src\\\\components\\\\Moves.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport './css/moves.css';\nimport CardHeader from \"./card/CardHeader\";\nimport Card from \"./card/Card\";\nimport CardBody from \"./card/CardBody\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Moves({\n  p\n}) {\n  _s();\n\n  const imgDir = `${process.env.PUBLIC_URL}/data/`;\n  useEffect(() => {\n    console.log(p);\n  }, [p]);\n  var moveSlots = {\n    move1: [p.moves.slot1],\n    move2: [p.moves.slot2]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(BasicCard, {\n      title: \"Basic Moves\",\n      p: p,\n      moves: p.moves\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), console.log(moveSlots), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"move-grid\",\n      children: [moveSlots.map((m, i) => {\n        /*#__PURE__*/\n        _jsxDEV(\"p\", {\n          children: \"Hi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Card, {\n        title: \"Slot 1\",\n        p: p,\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"move-group\",\n            children: p.moves.slot1.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(MoveRow, {\n                p: p,\n                title: m.moveId,\n                url: `${imgDir}${p.pokemonId}/moves/${m.moveId}.png`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Style: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 36\n                }, this), m.style]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Category: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 36\n                }, this), m.category]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Cooldown: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 36\n                }, this), m.cooldown]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Level: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 36\n                }, this), m.level]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 33\n              }, this), m.upgrade ? /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Upgrade: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 40\n                }, this), \" \", m.upgrade]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 37\n              }, this) : null]\n            }, m.moveId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        title: \"Slot 2\",\n        p: p,\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"move-group\",\n            children: p.moves.slot2.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(MoveRow, {\n                p: p,\n                title: m.moveId,\n                url: `${imgDir}${p.pokemonId}/moves/${m.moveId}.png`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Style: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 36\n                }, this), m.style]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Category: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 36\n                }, this), m.category]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Cooldown: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 36\n                }, this), m.cooldown]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Level: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 36\n                }, this), m.level]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this), m.upgrade ? /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Upgrade: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 40\n                }, this), \" \", m.upgrade]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 37\n              }, this) : null]\n            }, m.moveId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Moves, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Moves;\n\nfunction BasicCard({\n  title,\n  moves,\n  p\n}) {\n  const imgDir = `${process.env.PUBLIC_URL}/data/`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"move-card\",\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      p: p,\n      title: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"basic-card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"move-card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"move-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"move-type\",\n            children: \"Basic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MoveRow, {\n            p: p,\n            title: moves.basic.moveId,\n            url: `${imgDir}/standard.png`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Style: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 28\n            }, this), moves.basic.style]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Boost Count: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 28\n            }, this), moves.basic.boostCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Boost Style: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 28\n            }, this), moves.basic.boostStyle]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"move-card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"move-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"move-type\",\n            children: \"Unite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MoveRow, {\n            p: p,\n            title: moves.unite.moveId,\n            url: `${imgDir}${p.pokemonId}/moves/unite.png`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = BasicCard;\n\nfunction MoveRow({\n  title,\n  url\n}) {\n  const upperCase = word => {\n    word = word.charAt(0).toUpperCase() + word.slice(1);\n\n    if (word.includes(\"_\")) {\n      var splitWord = word.split(\"_\");\n      splitWord[1] = splitWord[1].charAt(0).toUpperCase() + splitWord[1].slice(1);\n      word = splitWord.join().replaceAll(\",\", \" \");\n    }\n\n    return word;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"icon-name-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"move-icon\",\n      src: url,\n      alt: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: upperCase(title)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 13\n  }, this);\n}\n\n_c3 = MoveRow;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Moves\");\n$RefreshReg$(_c2, \"BasicCard\");\n$RefreshReg$(_c3, \"MoveRow\");","map":{"version":3,"sources":["C:/Users/Blake/react/unite/src/components/Moves.jsx"],"names":["useEffect","CardHeader","Card","CardBody","Moves","p","imgDir","process","env","PUBLIC_URL","console","log","moveSlots","move1","moves","slot1","move2","slot2","map","m","i","moveId","pokemonId","style","category","cooldown","level","upgrade","BasicCard","title","basic","boostCount","boostStyle","unite","MoveRow","url","upperCase","word","charAt","toUpperCase","slice","includes","splitWord","split","join","replaceAll"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAO,iBAAP;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,QAAP,MAAqB,iBAArB;;AAEA,eAAe,SAASC,KAAT,CAAe;AAACC,EAAAA;AAAD,CAAf,EAAoB;AAAA;;AAC/B,QAAMC,MAAM,GAAI,GAAEC,OAAO,CAACC,GAAR,CAAYC,UAAW,QAAzC;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,OAAO,CAACC,GAAR,CAAYN,CAAZ;AAEH,GAHQ,EAGN,CAACA,CAAD,CAHM,CAAT;AAMA,MAAIO,SAAS,GAAG;AACZC,IAAAA,KAAK,EAAE,CAACR,CAAC,CAACS,KAAF,CAAQC,KAAT,CADK;AAEZC,IAAAA,KAAK,EAAE,CAACX,CAAC,CAACS,KAAF,CAAQG,KAAT;AAFK,GAAhB;AAKA,sBACI;AAAA,4BACI,QAAC,SAAD;AACI,MAAA,KAAK,EAAE,aADX;AAEI,MAAA,CAAC,EAAEZ,CAFP;AAGI,MAAA,KAAK,EAAEA,CAAC,CAACS;AAHb;AAAA;AAAA;AAAA;AAAA,YADJ,EAKSJ,OAAO,CAACC,GAAR,CAAYC,SAAZ,CALT,eAMI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,iBACKA,SAAS,CAACM,GAAV,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACC,OAFA,CADL,eAII,QAAC,IAAD;AACI,QAAA,KAAK,EAAE,QADX;AAEI,QAAA,CAAC,EAAEf,CAFP;AAAA,+BAGI,QAAC,QAAD;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,sBACEA,CAAC,CAACS,KAAF,CAAQC,KAAR,CAAcG,GAAd,CAAkBC,CAAC,iBACjB;AAAA,sCAEI,QAAC,OAAD;AACI,gBAAA,CAAC,EAAEd,CADP;AAEI,gBAAA,KAAK,EAAEc,CAAC,CAACE,MAFb;AAGI,gBAAA,GAAG,EAAG,GAAEf,MAAO,GAAED,CAAC,CAACiB,SAAU,UAASH,CAAC,CAACE,MAAO;AAHnD;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAMI;AAAA,wCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAH,EAAwBF,CAAC,CAACI,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ,eAOI;AAAA,wCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAH,EAA2BJ,CAAC,CAACK,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPJ,eAQI;AAAA,wCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAH,EAA2BL,CAAC,CAACM,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,sBARJ,eASI;AAAA,wCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAH,EAAwBN,CAAC,CAACO,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,sBATJ,EAUKP,CAAC,CAACQ,OAAF,gBACG;AAAA,wCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAH,OAA2BR,CAAC,CAACQ,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,sBADH,GAEK,IAZV;AAAA,eACSR,CAAC,CAACE,MADX;AAAA;AAAA;AAAA;AAAA,oBADF;AADF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cAJJ,eA6BI,QAAC,IAAD;AACI,QAAA,KAAK,EAAE,QADX;AAEI,QAAA,CAAC,EAAEhB,CAFP;AAAA,+BAGI,QAAC,QAAD;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,sBACEA,CAAC,CAACS,KAAF,CAAQG,KAAR,CAAcC,GAAd,CAAkBC,CAAC,iBACjB;AAAA,sCAEI,QAAC,OAAD;AACI,gBAAA,CAAC,EAAEd,CADP;AAEI,gBAAA,KAAK,EAAEc,CAAC,CAACE,MAFb;AAGI,gBAAA,GAAG,EAAG,GAAEf,MAAO,GAAED,CAAC,CAACiB,SAAU,UAASH,CAAC,CAACE,MAAO;AAHnD;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAMI;AAAA,wCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAH,EAAwBF,CAAC,CAACI,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ,eAOI;AAAA,wCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAH,EAA2BJ,CAAC,CAACK,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPJ,eAQI;AAAA,wCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAH,EAA2BL,CAAC,CAACM,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,sBARJ,eASI;AAAA,wCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAH,EAAwBN,CAAC,CAACO,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,sBATJ,EAUKP,CAAC,CAACQ,OAAF,gBACG;AAAA,wCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAH,OAA2BR,CAAC,CAACQ,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,sBADH,GAEK,IAZV;AAAA,eACSR,CAAC,CAACE,MADX;AAAA;AAAA;AAAA;AAAA,oBADF;AADF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgEH;;GA9EuBjB,K;;KAAAA,K;;AAiFxB,SAASwB,SAAT,CAAmB;AAACC,EAAAA,KAAD;AAAQf,EAAAA,KAAR;AAAeT,EAAAA;AAAf,CAAnB,EAAsC;AAClC,QAAMC,MAAM,GAAI,GAAEC,OAAO,CAACC,GAAR,CAAYC,UAAW,QAAzC;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI,QAAC,UAAD;AACI,MAAA,CAAC,EAAEJ,CADP;AAEI,MAAA,KAAK,EAAEwB;AAFX;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAG,YAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,OAAD;AACI,YAAA,CAAC,EAAExB,CADP;AAEI,YAAA,KAAK,EAAES,KAAK,CAACgB,KAAN,CAAYT,MAFvB;AAGI,YAAA,GAAG,EAAG,GAAEf,MAAO;AAHnB;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAMI;AAAA,oCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAH,EAAwBQ,KAAK,CAACgB,KAAN,CAAYP,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,eAOI;AAAA,oCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAH,EAA8BT,KAAK,CAACgB,KAAN,CAAYC,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAQI;AAAA,oCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAH,EAA8BjB,KAAK,CAACgB,KAAN,CAAYE,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAaI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAG,YAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,OAAD;AACI,YAAA,CAAC,EAAE3B,CADP;AAEI,YAAA,KAAK,EAAES,KAAK,CAACmB,KAAN,CAAYZ,MAFvB;AAGI,YAAA,GAAG,EAAG,GAAEf,MAAO,GAAED,CAAC,CAACiB,SAAU;AAHjC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH;;MAhCQM,S;;AAkCT,SAASM,OAAT,CAAiB;AAAEL,EAAAA,KAAF;AAASM,EAAAA;AAAT,CAAjB,EAAgC;AAC5B,QAAMC,SAAS,GAAIC,IAAD,IAAU;AACxBA,IAAAA,IAAI,GAAGA,IAAI,CAACC,MAAL,CAAY,CAAZ,EAAeC,WAAf,KAA+BF,IAAI,CAACG,KAAL,CAAW,CAAX,CAAtC;;AACA,QAAGH,IAAI,CAACI,QAAL,CAAc,GAAd,CAAH,EAAuB;AACrB,UAAIC,SAAS,GAAGL,IAAI,CAACM,KAAL,CAAW,GAAX,CAAhB;AACAD,MAAAA,SAAS,CAAC,CAAD,CAAT,GAAeA,SAAS,CAAC,CAAD,CAAT,CAAaJ,MAAb,CAAoB,CAApB,EAAuBC,WAAvB,KAAuCG,SAAS,CAAC,CAAD,CAAT,CAAaF,KAAb,CAAmB,CAAnB,CAAtD;AACAH,MAAAA,IAAI,GAAGK,SAAS,CAACE,IAAV,GAAiBC,UAAjB,CAA4B,GAA5B,EAAiC,GAAjC,CAAP;AACD;;AAAC,WAAOR,IAAP;AACH,GAPH;;AAQA,sBACQ;AACI,IAAA,SAAS,EAAC,eADd;AAAA,4BAEI;AACI,MAAA,SAAS,EAAC,WADd;AAEI,MAAA,GAAG,EAAEF,GAFT;AAGI,MAAA,GAAG,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI;AAAA,gBAAOC,SAAS,CAACP,KAAD;AAAhB;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAUH;;MAnBQK,O","sourcesContent":["import { useEffect } from \"react\"\r\nimport './css/moves.css';\r\nimport CardHeader from \"./card/CardHeader\";\r\nimport Card from \"./card/Card\";\r\nimport CardBody from \"./card/CardBody\";\r\n\r\nexport default function Moves({p}) {\r\n    const imgDir = `${process.env.PUBLIC_URL}/data/`;\r\n    \r\n    useEffect(() => {\r\n        console.log(p\r\n            )\r\n    }, [p])\r\n\r\n\r\n    var moveSlots = { \r\n        move1: [p.moves.slot1], \r\n        move2: [p.moves.slot2] \r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <BasicCard \r\n                title={\"Basic Moves\"}\r\n                p={p}\r\n                moves={p.moves}/>\r\n                {console.log(moveSlots)}\r\n            <div className=\"move-grid\">\r\n                {moveSlots.map((m, i) => {\r\n                <p>Hi</p>\r\n                })}\r\n                <Card \r\n                    title={\"Slot 1\"}\r\n                    p={p}>\r\n                    <CardBody>\r\n                        <div className=\"move-group\">\r\n                        { p.moves.slot1.map(m => (\r\n                            <div\r\n                                key={m.moveId}>\r\n                                <MoveRow \r\n                                    p={p}\r\n                                    title={m.moveId}\r\n                                    url={`${imgDir}${p.pokemonId}/moves/${m.moveId}.png`}/>\r\n                                <p><span>Style: </span>{m.style}</p>\r\n                                <p><span>Category: </span>{m.category}</p>\r\n                                <p><span>Cooldown: </span>{m.cooldown}</p>\r\n                                <p><span>Level: </span>{m.level}</p>\r\n                                {m.upgrade ?\r\n                                    <p><span>Upgrade: </span> {m.upgrade}</p>\r\n                                    : null \r\n                                }\r\n                            </div>\r\n                        ))}\r\n                        </div>\r\n                    </CardBody>\r\n                </Card>\r\n                <Card \r\n                    title={\"Slot 2\"}\r\n                    p={p}>\r\n                    <CardBody>\r\n                        <div className=\"move-group\">\r\n                        { p.moves.slot2.map(m => (\r\n                            <div\r\n                                key={m.moveId}>\r\n                                <MoveRow \r\n                                    p={p}\r\n                                    title={m.moveId}\r\n                                    url={`${imgDir}${p.pokemonId}/moves/${m.moveId}.png`}/>\r\n                                <p><span>Style: </span>{m.style}</p>\r\n                                <p><span>Category: </span>{m.category}</p>\r\n                                <p><span>Cooldown: </span>{m.cooldown}</p>\r\n                                <p><span>Level: </span>{m.level}</p>\r\n                                {m.upgrade ?\r\n                                    <p><span>Upgrade: </span> {m.upgrade}</p>\r\n                                    : null \r\n                                }\r\n                            </div>\r\n                        ))}\r\n                        </div>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction BasicCard({title, moves, p}) {\r\n    const imgDir = `${process.env.PUBLIC_URL}/data/`;\r\n    return (\r\n        <div className=\"move-card\">\r\n            <CardHeader \r\n                p={p}\r\n                title={title}/>\r\n            <div className=\"basic-card-body\">\r\n                <div className=\"move-card-body\">\r\n                    <div className=\"move-group\">\r\n                        <p className=\"move-type\">Basic</p>\r\n                        <MoveRow \r\n                            p={p}\r\n                            title={moves.basic.moveId}\r\n                            url={`${imgDir}/standard.png`}/>\r\n                        <p><span>Style: </span>{moves.basic.style}</p>\r\n                        <p><span>Boost Count: </span>{moves.basic.boostCount}</p>\r\n                        <p><span>Boost Style: </span>{moves.basic.boostStyle}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"move-card-body\">\r\n                    <div className=\"move-group\">\r\n                        <p className=\"move-type\">Unite</p>\r\n                        <MoveRow \r\n                            p={p}\r\n                            title={moves.unite.moveId}\r\n                            url={`${imgDir}${p.pokemonId}/moves/unite.png`}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction MoveRow({ title, url}) {\r\n    const upperCase = (word) => {\r\n        word = word.charAt(0).toUpperCase() + word.slice(1)\r\n        if(word.includes(\"_\")) {\r\n          var splitWord = word.split(\"_\")\r\n          splitWord[1] = splitWord[1].charAt(0).toUpperCase() + splitWord[1].slice(1)\r\n          word = splitWord.join().replaceAll(\",\", \" \")\r\n        } return word\r\n      }\r\n    return (\r\n            <div \r\n                className=\"icon-name-row\">\r\n                <img\r\n                    className=\"move-icon\" \r\n                    src={url}\r\n                    alt='hello'/>\r\n                <span>{upperCase(title)}</span>\r\n            </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}