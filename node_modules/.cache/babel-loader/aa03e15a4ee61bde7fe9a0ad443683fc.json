{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Blake\\\\react\\\\unite\\\\src\\\\context\\\\PokemonContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport { pokemon } from \"../pokemon/pokemon.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PokemonContext = /*#__PURE__*/createContext();\nexport const PokemonProvider = ({\n  children\n}) => {\n  _s();\n\n  const [roster, setRoster] = useState(null);\n  const [pokemon, setPokemon] = useState(null);\n  useEffect(() => {\n    setRoster(pokemon);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(PokemonContext.Provider, {\n    value: (roster, setRoster, pokemon, setPokemon),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PokemonProvider, \"q889wdChMmf4LcHtUSg9gaGDUVg=\");\n\n_c = PokemonProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonProvider\");","map":{"version":3,"sources":["C:/Users/Blake/react/unite/src/context/PokemonContext.js"],"names":["createContext","useState","useEffect","pokemon","PokemonContext","PokemonProvider","children","roster","setRoster","setPokemon"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,OAAT,QAAwB,yBAAxB;;AACA,OAAO,MAAMC,cAAc,gBAAGJ,aAAa,EAApC;AAEP,OAAO,MAAMK,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC/C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACE,OAAD,EAAUM,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,SAAS,CAACL,OAAD,CAAT;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,GAAGI,MAAM,EAAEC,SAAF,EAAaL,OAAb,EAAsBM,UAA/B,CAA9B;AAAA,cACGH;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAbM;;GAAMD,e;;KAAAA,e","sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\nimport { pokemon } from \"../pokemon/pokemon.json\";\r\nexport const PokemonContext = createContext();\r\n\r\nexport const PokemonProvider = ({ children }) => {\r\n  const [roster, setRoster] = useState(null);\r\n  const [pokemon, setPokemon] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setRoster(pokemon);\r\n  }, []);\r\n\r\n  return (\r\n    <PokemonContext.Provider value={(roster, setRoster, pokemon, setPokemon)}>\r\n      {children}\r\n    </PokemonContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}