{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Blake\\\\react\\\\unite\\\\src\\\\views\\\\Roster.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"./roster.css\";\nimport PokemonBasic from \"../pokemon/PokemonBasic.jsx\";\nimport { usePokemonProvider } from \"../context/PokemonContext\";\nimport SelectPokemon from \"../components/pokemonSort/SelectPokemon\";\nimport { useSelectProvider } from \"../context/SelectContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Roster() {\n  _s();\n\n  const {\n    roster\n  } = usePokemonProvider();\n  const {\n    roles,\n    styles,\n    difficulty,\n    type\n  } = useSelectProvider();\n\n  const filterData = data => {\n    let dataCopy = data;\n\n    if (roles !== \"all\") {\n      if (styles !== \"all\") {\n        if (difficulty !== \"all\") {\n          if (type !== \"all\") {\n            dataCopy = dataCopy.role === roles && dataCopy.style === styles && dataCopy.difficulty === difficulty && dataCopy.type === type;\n          } else {\n            dataCopy = dataCopy.role === roles && dataCopy.style === styles && dataCopy.difficulty === difficulty;\n          }\n        } else if (type !== \"all\") {\n          dataCopy = dataCopy.role === roles && dataCopy.style === styles && dataCopy.type === type;\n        } else {\n          dataCopy = dataCopy.role === roles && dataCopy.style === styles;\n        }\n      } else if (difficulty !== \"all\") {\n        if (type !== \"all\") {\n          dataCopy = dataCopy.role === roles && dataCopy.difficulty === difficulty && dataCopy.type === type;\n        } else {\n          dataCopy = dataCopy.role === roles && dataCopy.difficulty === difficulty;\n        }\n      } else if (type !== \"all\") {\n        dataCopy = dataCopy.role === roles && dataCopy.type === type;\n      } else {\n        dataCopy = dataCopy.role === roles;\n      }\n    } else if (styles !== \"all\") {\n      if (difficulty !== \"all\") {\n        if (type !== \"all\") {\n          dataCopy = dataCopy.style === styles && dataCopy.difficulty === difficulty && dataCopy.type === type;\n        } else {\n          dataCopy = dataCopy.style === styles && dataCopy.difficulty === difficulty;\n        }\n      } else if (type !== \"all\") {\n        dataCopy = dataCopy.style === styles && dataCopy.type === type;\n      } else {\n        dataCopy = dataCopy.style === styles;\n      }\n    } else if (difficulty !== \"all\") {\n      if (type !== \"all\") {\n        dataCopy = dataCopy.difficulty === difficulty && dataCopy.type === type;\n      } else {\n        dataCopy = dataCopy.difficulty === difficulty;\n      }\n    } else if (type !== \"all\") {\n      dataCopy = dataCopy.type === type;\n    }\n\n    return dataCopy;\n  };\n\n  if (!roster) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"roster\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Roster\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SelectPokemon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-basic-grid\",\n      children: roster.filter(p => filterData(p)).map(p => /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `/pokemon/${p.pokemonId}`,\n        children: /*#__PURE__*/_jsxDEV(PokemonBasic, {\n          p: p\n        }, p.pokemonId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Roster, \"zpR3aSSs3DEEeO7Em1kWkG8jVDo=\", false, function () {\n  return [usePokemonProvider, useSelectProvider];\n});\n\n_c = Roster;\n\nvar _c;\n\n$RefreshReg$(_c, \"Roster\");","map":{"version":3,"sources":["C:/Users/Blake/react/unite/src/views/Roster.js"],"names":["useState","useEffect","PokemonBasic","usePokemonProvider","SelectPokemon","useSelectProvider","Roster","roster","roles","styles","difficulty","type","filterData","data","dataCopy","role","style","filter","p","map","pokemonId"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport \"./roster.css\";\r\nimport PokemonBasic from \"../pokemon/PokemonBasic.jsx\";\r\nimport { usePokemonProvider } from \"../context/PokemonContext\";\r\nimport SelectPokemon from \"../components/pokemonSort/SelectPokemon\";\r\nimport { useSelectProvider } from \"../context/SelectContext\";\r\n\r\nexport default function Roster() {\r\n  const { roster } = usePokemonProvider();\r\n  const { roles, styles, difficulty, type } = useSelectProvider();\r\n\r\n  const filterData = data => {\r\n    let dataCopy = data;\r\n\r\n    if (roles !== \"all\") {\r\n      if (styles !== \"all\") {\r\n        if (difficulty !== \"all\") {\r\n          if (type !== \"all\") {\r\n            dataCopy =\r\n              dataCopy.role === roles &&\r\n              dataCopy.style === styles &&\r\n              dataCopy.difficulty === difficulty &&\r\n              dataCopy.type === type;\r\n          } else {\r\n            dataCopy =\r\n              dataCopy.role === roles &&\r\n              dataCopy.style === styles &&\r\n              dataCopy.difficulty === difficulty;\r\n          }\r\n        } else if (type !== \"all\") {\r\n          dataCopy =\r\n            dataCopy.role === roles &&\r\n            dataCopy.style === styles &&\r\n            dataCopy.type === type;\r\n        } else {\r\n          dataCopy = dataCopy.role === roles && dataCopy.style === styles;\r\n        }\r\n      } else if (difficulty !== \"all\") {\r\n        if (type !== \"all\") {\r\n          dataCopy =\r\n            dataCopy.role === roles &&\r\n            dataCopy.difficulty === difficulty &&\r\n            dataCopy.type === type;\r\n        } else {\r\n          dataCopy =\r\n            dataCopy.role === roles && dataCopy.difficulty === difficulty;\r\n        }\r\n      } else if (type !== \"all\") {\r\n        dataCopy = dataCopy.role === roles && dataCopy.type === type;\r\n      } else {\r\n        dataCopy = dataCopy.role === roles;\r\n      }\r\n    } else if (styles !== \"all\") {\r\n      if (difficulty !== \"all\") {\r\n        if (type !== \"all\") {\r\n          dataCopy =\r\n            dataCopy.style === styles &&\r\n            dataCopy.difficulty === difficulty &&\r\n            dataCopy.type === type;\r\n        } else {\r\n          dataCopy =\r\n            dataCopy.style === styles && dataCopy.difficulty === difficulty;\r\n        }\r\n      } else if (type !== \"all\") {\r\n        dataCopy = dataCopy.style === styles && dataCopy.type === type;\r\n      } else {\r\n        dataCopy = dataCopy.style === styles;\r\n      }\r\n    } else if (difficulty !== \"all\") {\r\n      if (type !== \"all\") {\r\n        dataCopy = dataCopy.difficulty === difficulty && dataCopy.type === type;\r\n      } else {\r\n        dataCopy = dataCopy.difficulty === difficulty;\r\n      }\r\n    } else if (type !== \"all\") {\r\n      dataCopy = dataCopy.type === type;\r\n    }\r\n    return dataCopy;\r\n  };\r\n\r\n  if (!roster) return <p>Loading</p>;\r\n\r\n  return (\r\n    <div className=\"roster\">\r\n      <h1>Roster</h1>\r\n      <div>\r\n        <SelectPokemon />\r\n      </div>\r\n      <div className=\"p-basic-grid\">\r\n        {roster\r\n          .filter(p => filterData(p))\r\n          .map(p => (\r\n            <a href={`/pokemon/${p.pokemonId}`}>\r\n              <PokemonBasic key={p.pokemonId} p={p} />\r\n            </a>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}