{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Blake\\\\react\\\\unite\\\\src\\\\error\\\\PageNotFound.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PageNotFound() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const {\n    param1,\n    param2\n  } = useParams();\n  useEffect(() => {\n    if (param1 && param2) {\n      console.log(param1, param2);\n    }\n  }, [param1, param2]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"not-found\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Page Not Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PageNotFound, \"SfVdOzlHYQz+xVyG6wdlXeGvG00=\", false, function () {\n  return [useParams];\n});\n\n_c = PageNotFound;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageNotFound\");","map":{"version":3,"sources":["C:/Users/Blake/react/unite/src/error/PageNotFound.jsx"],"names":["useEffect","useState","useParams","PageNotFound","error","setError","param1","param2","console","log"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAAQC,SAAR,QAAwB,kBAAxB;;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AACnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAM;AAAEK,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqBL,SAAS,EAApC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGM,MAAM,IAAIC,MAAb,EAAqB;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EAAmBC,MAAnB;AACH;AACJ,GAJQ,EAIN,CAACD,MAAD,EAASC,MAAT,CAJM,CAAT;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAlBuBJ,Y;UAGOD,S;;;KAHPC,Y","sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport {useParams} from 'react-router-dom'\r\n\r\nexport default function PageNotFound() {\r\n    const [error, setError] = useState(null)\r\n\r\n    const { param1, param2 } = useParams();\r\n\r\n    useEffect(() => {\r\n        if(param1 && param2) {\r\n            console.log(param1,param2)\r\n        }\r\n    }, [param1, param2])\r\n\r\n    return (\r\n        <div className=\"not-found\">\r\n            <h1>Page Not Found</h1>\r\n        </div>\r\n    )\r\n\r\n\r\n} "]},"metadata":{},"sourceType":"module"}